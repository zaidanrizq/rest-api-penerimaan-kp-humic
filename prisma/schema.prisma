// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  user_id Int @id @default(autoincrement())
  full_name String @db.VarChar(72)
  birth_date DateTime?
  gender String? @db.Char(1)
  nim String @unique @db.VarChar(10)
  perguruan_tinggi String @db.VarChar(35)
  prodi String @db.VarChar(72)
  cv String? @db.VarChar(320)
  portfolio String? @db.VarChar(320)
  phone_number String @db.VarChar(13)
  email String @unique @db.VarChar(320)
  password String @db.VarChar(72)
  profile_picture String? @db.VarChar(2083)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  kp_application kp_applications?
}

model batches {
  batch_id Int @id @default(autoincrement())
  number String @unique @db.VarChar(4)
  opened_at DateTime
  closed_at DateTime
  semester String @db.VarChar(6)
  year String @db.VarChar(4)
  selection_announcement Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  kp_roles kp_roles[]
}

model kp_roles {
  role_id Int @id @default(autoincrement())
  name String @db.VarChar(72)
  description String @db.Text
  kualifikasi String @db.Text
  role_image String @db.VarChar(2083)

  batch batches @relation(fields: [batch_id], references: [batch_id], onDelete: Cascade)
  batch_id Int

  kp_applications kp_applications[]
}

model kp_applications {
  application_id Int @id @default(autoincrement())
  status String @db.VarChar(10) @default("Proses")
  application_date DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user users @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  user_id Int @unique

  kp_role kp_roles @relation(fields: [role_id], references: [role_id], onDelete: Cascade)
  role_id Int
}

model admin {
  admin_id Int @id @default(autoincrement())
  email String @unique @db.VarChar(320)
  password String @db.VarChar(72)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}